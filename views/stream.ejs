<html>
<% include partials/head.ejs %>
<body>
    <% include partials/navigation.ejs %>
    <div class='container'>

      <h1><%= rq[0].name %> - <%= rq[0].number %></h1>
      <h4><%= rq[0].series %> - <%= rq[0].name_season %></h4>

      <div align='center' class='embed-responsive embed-responsive-16by9'>
        <video id='myVideo' class='embed-responsive-item' poster=<%= src_info.poster %> controls>
            <source src=<%= src_info.src %> type='video/mp4'>
        </video>
      </div>
      <br>
      <p><%= rq[0].description %></p>

    </div>
    <script>
        var vid = document.getElementById('myVideo');

        var stream_id = getParameterByName('id');

        console.log('Test: ' + <%= session.userid %>);

        $(function(){
          var socket = io.connect();

          //video
          var $vid = $('#myVideo');

          //Send video position to server every five seconds if it is currently plaing
          setInterval(function(){
            if(vid.playing){
              var stream_info = {
                curr_time: vid.currentTime,
                episode: stream_id,
                user: <%= session.userid %>
              };
              socket.emit('send watchtime', stream_info);
              console.log('Sent.');
            } else {
              console.log('Not Playing.');
            }
          }, 5000);

          //Join the Account Room when loading site
          socket.emit('join room', {username: '<%= session.username %>'});

          socket.on('joined room', function(data){
            console.log('Users in Room: ' + data.members);
          });

          //Play
          socket.on('play', function(data){
            playVideo();
            console.log('Played on client.');
          });

          //Pause
          socket.on('pause', function(data){
            pauseVideo();
            console.log('Paused on client. Start again on ' + data.time);
          });

          //Skip
          socket.on('skip forward 10', function(data){
            vid.currentTime = vid.currentTime + 10;
            console.log('Skipped 10 Forward.');
          });
          socket.on('skip backward 10', function(data){
            vid.currentTime = vid.currentTime - 10;
            console.log('Skipped 10 Backward.');
          });

          //Sync watchtime
          socket.on('set watchtime', function(data){
            vid.currentTime = data.watch_time;
            console.log('Synced watch_time to ' + data.watch_time);
          });

          $('video').on('play', function (e) {
            //When play button gets clicked sync time
            if(vid.currentTime < 10){
              socket.emit('get watchtime', {
                curr_time: vid.currentTime,
                episode: stream_id,
                user: <%= session.userid %>
              });
            }
          });
        });

        function pauseVideo(){
          vid.pause();
        }

        function playVideo(){
          vid.play();
        }

        //Query Parameter Function
        function getParameterByName(name, url) {
          if (!url) url = window.location.href;
            name = name.replace(/[\[\]]/g, "\\$&");
            var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
          if (!results) return null;
          if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, " "));
        }

        Object.defineProperty(HTMLMediaElement.prototype, 'playing', {
          get: function(){
            return !!(this.currentTime > 0 && !this.paused && !this.ended && this.readyState > 2);
          }
        });


    </script>
</body>
</html>
